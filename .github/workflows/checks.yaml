name: checks

permissions:
  contents: read

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    branches-ignore:
      - 'release/**'
  schedule:
    - cron: '0 4 * * *'
  merge_group:
    branches:
      - main

jobs:
  build:
    name: Build and test
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        include:
          - rust: stable
            os: ubuntu-latest
            features: ""
            target: "x86_64-unknown-linux-gnu"
            # - rust: msrv
            #   os: ubuntu-latest
            #   features: ""
            #   target: "x86_64-unknown-linux-gnu"
            # - rust: beta
            #   os: ubuntu-latest
            #   features: ""
            #   target: "x86_64-unknown-linux-gnu"
            # - rust: "stable"
            #   os: macos-latest
            #   features: ""
            #   target: "x86_64-apple-darwin"
            # - rust: "stable"
            #   os: macos-14
            #   features: ""
            #   target: "aarch64-apple-darwin"
            # - rust: stable-x86_64-gnu
            #   os: windows-2022
            #   features: ""
            #   target: "x86_64-pc-windows-gnu"
    steps:
      - name: Checkout sources
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b
        with:
          toolchain: nightly
          targets: "${{ matrix.target }}"
      - name: target
        run: "rustc -vV | sed -n 's|host: ||p'"
        if: matrix.os != 'windows-2022'
      - name: Install cargo-llvm-cov & cargo-nextest
        uses: taiki-e/install-action@d12e869b89167df346dd0ff65da342d1fb1202fb # v2.53.2
        with:
          tool: cargo-llvm-cov,cargo-nextest
      - name: cargo llvm-cov nextest
        if: matrix.os != 'windows-2022'
        run: cargo llvm-cov nextest --target ${{matrix.target}} ${{ matrix.features }} --lcov --output-path lcov.info --ignore-filename-regex "test-"
        env:
          RUST_BACKTRACE: 1
          RUSTFLAGS: "-Awarnings"
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
      #   if: matrix.os != 'windows-2022' && matrix.rust == 'stable'
      #   with:
      #     files: |
      #       ./lcov.info
      #       ./cdylib.lcov.info
      #     fail_ci_if_error: false
      #     flags: test-${{matrix.target}}
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     name: test
      #     verbose: true

  fuzz-decompress:
    name: fuzz-decompress 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
        with:
          persist-credentials: false
      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b
        with:
          toolchain: nightly
      - name: Install cargo fuzz
        uses: taiki-e/install-action@56ab7930c591507f833cbaed864d201386d518a8
        with:
          tool: cargo-fuzz
      - name: Download custom decompression corpus
        run: |
          wget https://github.com/trifectatechfoundation/compression-corpus/releases/download/2025-07-30-091654/zstd-files.zip
          unzip zstd-files.zip -d zstd-files
      - name: run the fuzzer 
        run: |
          cargo fuzz run decompress zstd-files/compressed -- -max_total_time=10
        env: 
          RUSTFLAGS: "-Awarnings"
